# .github/workflows/deploy.yml
name: Deploy

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get build outputs
        id: get_outputs
        run: |
          echo "IMAGE_NAME=${{ needs.build.outputs.image_name }}"
          echo "IMAGE_TAG=${{ needs.build.outputs.image_tag }}"
          echo "IMAGE_NAME=${{ needs.build.outputs.image_name }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ needs.build.outputs.image_tag }}" >> $GITHUB_ENV
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        # env:
        #   DOCKER_IMAGE_TAG: ${{ github.event.workflow_run.outputs.docker_image_tag }}
        run: |
          IMAGE_NAME=${{ env.IMAGE_NAME }}
          IMAGE_TAG=${{ env.IMAGE_TAG }}
          terraform apply -auto-approve -var "docker_image=${{ secrets.DOCKER_USERNAME }}/my-python-app:$IMAGE_TAG"
